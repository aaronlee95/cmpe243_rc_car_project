/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKBIT_COUNT_H
#define _MOCKBIT_COUNT_H

#include "bit_count.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockbit_count_Init(void);
void Mockbit_count_Destroy(void);
void Mockbit_count_Verify(void);




#define bit_count_get_uint8_IgnoreAndReturn(cmock_retval) bit_count_get_uint8_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bit_count_get_uint8_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define bit_count_get_uint8_ExpectAnyArgsAndReturn(cmock_retval) bit_count_get_uint8_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void bit_count_get_uint8_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define bit_count_get_uint8_ExpectAndReturn(value, cmock_retval) bit_count_get_uint8_CMockExpectAndReturn(__LINE__, value, cmock_retval)
void bit_count_get_uint8_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t value, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_bit_count_get_uint8_CALLBACK)(uint8_t value, int cmock_num_calls);
void bit_count_get_uint8_StubWithCallback(CMOCK_bit_count_get_uint8_CALLBACK Callback);
#define bit_count_get_uint8_IgnoreArg_value() bit_count_get_uint8_CMockIgnoreArg_value(__LINE__)
void bit_count_get_uint8_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
